package gestorStarWarsUI;

import static java.awt.Dialog.DEFAULT_MODALITY_TYPE;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import starwars.SalvarRecuperar;
import starwars.Articulo;

/**
 * Tarea del módulo de programación DAW
 * 
 * 
 * @author Carlos Villatoro
 */
public class Principal extends javax.swing.JFrame {
    
    // Declarar arraylist para almacenar los artículos
    private static ArrayList <Articulo> listaArticulos = new ArrayList() ;
    
    private static final short ANCHURA_VENTANA = 500 ;
    private static final short ALTURA_VENTANA = 450 ;
    
    
    /**
     * Método para acceder a la lista desde el formulario de listado de artículos
     * @return La lista de elementos.
     */
    protected static ArrayList<Articulo> getListaArticulos(){
        return Principal.listaArticulos ;
    }
    
    /**
     * Establece el atributo listaArticulos.
     * @param listaArticulos El arraylist de elementos.
     */
    protected static void setListaArticulos(ArrayList<Articulo> listaArticulos){
        Principal.listaArticulos = listaArticulos ;
    }

       
    
    /**
     * Crea nuevo formulario Principal
     */
    public Principal() {
        // Añadir un oyente para detectar si se pulsa Escape desde el formulario
        // y entonces comprobar si hay cambios sin guardar, y advertir sobre 
        // ello mediante confirmarSalida() 
        addKeyListener(new KeyAdapter() {
            @Override
            public void keyPressed(KeyEvent ke) {  
                if(ke.getKeyCode() == KeyEvent.VK_ESCAPE) {
                    confirmarSalida() ;
                }
              } 
           }); 
        
        
        initComponents();
        
        
        
        jMenuSalir.addActionListener(new exitListener());
        WindowListener exitListener = new WindowAdapter() {

            @Override
            public void windowClosing(WindowEvent e) {
                confirmarSalida() ;
            } 
        };
        addWindowListener(exitListener);
        
    }
    
    
    private class exitListener implements ActionListener {
        @Override
        public void actionPerformed(ActionEvent e) {
            confirmarSalida() ;
        }
    }

    /**
     * Si la opción Guardar, del menú, está habilitada, pregunta si se está
     * seguro de salir de la aplicación sin guardar los cambios.
     */
    private void confirmarSalida() {
        if (jMenuGuardar.isEnabled()) {
            if (JOptionPane.showConfirmDialog(null, "Ha habido cambios que no se "
                    + "han guardado. Desea guardarlos?", "Salir de la aplicación",
                    JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
                
                // Guardar datos al fichero
                SalvarRecuperar.guardarArrayEnFichero(Principal.getListaArticulos()) ;
            }
            // Salir de la aplicación
            System.exit(0); 
        } else {
            System.exit(0);
        }
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuBar1 = new javax.swing.JMenuBar();
        jMenuArchivo = new javax.swing.JMenu();
        jMenuGuardar = new javax.swing.JMenuItem();
        jMenuSalir = new javax.swing.JMenuItem();
        jMenuArticulos = new javax.swing.JMenu();
        jMenuCrearElemento = new javax.swing.JMenuItem();
        jMenuModificar = new javax.swing.JMenuItem();
        jMenuBorrar = new javax.swing.JMenuItem();
        jMenuListar = new javax.swing.JMenuItem();
        jMenuAyuda = new javax.swing.JMenu();
        jMenuAcercade = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Star Wars");

        jMenuArchivo.setMnemonic('A');
        jMenuArchivo.setText("Archivo");

        jMenuGuardar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_G, java.awt.event.InputEvent.CTRL_MASK));
        jMenuGuardar.setText("Guardar");
        jMenuGuardar.setEnabled(false);
        jMenuGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuGuardarActionPerformed(evt);
            }
        });
        jMenuArchivo.add(jMenuGuardar);

        jMenuSalir.setText("Salir");
        jMenuSalir.setName(""); // NOI18N
        jMenuSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuSalirActionPerformed(evt);
            }
        });
        jMenuArchivo.add(jMenuSalir);

        jMenuBar1.add(jMenuArchivo);

        jMenuArticulos.setMnemonic('o');
        jMenuArticulos.setText("Artículos");

        jMenuCrearElemento.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_MASK));
        jMenuCrearElemento.setText("Crear artículo");
        jMenuCrearElemento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuCrearElementoActionPerformed(evt);
            }
        });
        jMenuArticulos.add(jMenuCrearElemento);

        jMenuModificar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_M, java.awt.event.InputEvent.CTRL_MASK));
        jMenuModificar.setText("Modificar artículo");
        jMenuModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuModificarActionPerformed(evt);
            }
        });
        jMenuArticulos.add(jMenuModificar);

        jMenuBorrar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_B, java.awt.event.InputEvent.CTRL_MASK));
        jMenuBorrar.setText("Borrar artículo");
        jMenuBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuBorrarActionPerformed(evt);
            }
        });
        jMenuArticulos.add(jMenuBorrar);

        jMenuListar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_L, java.awt.event.InputEvent.CTRL_MASK));
        jMenuListar.setText("Listar artículos");
        jMenuListar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuListarActionPerformed(evt);
            }
        });
        jMenuArticulos.add(jMenuListar);

        jMenuBar1.add(jMenuArticulos);

        jMenuAyuda.setMnemonic('u');
        jMenuAyuda.setText("Ayuda");

        jMenuAcercade.setText("Acerca de...");
        jMenuAcercade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuAcercadeActionPerformed(evt);
            }
        });
        jMenuAyuda.add(jMenuAcercade);

        jMenuBar1.add(jMenuAyuda);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 279, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    private void jMenuCrearElementoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuCrearElementoActionPerformed
        // Declarar la ventana que vamos a abrir
        EditaArticulo dlgAlta ;
        
        // Construcción de ventana secundaria.
        dlgAlta = new EditaArticulo(this, true, listaArticulos, -1) ;
        
        //Tamaño de la ventana
        dlgAlta.setSize(ANCHURA_VENTANA, ALTURA_VENTANA);     
        dlgAlta.setModalityType(DEFAULT_MODALITY_TYPE) ;

        // Centrar la ventana
        dlgAlta.setLocationRelativeTo(null);

        // Hacemos visible el formulario
        dlgAlta.setVisible(true);
        
        // A la vuelta del formulario y antes de elimiarlo de memoria, 
        // obtenemos el objeto trabajador creado
        Articulo miArticulo = dlgAlta.getArticulo() ;
        
        if (miArticulo != null) {
            // Añadir el socio a la lista
            Principal.listaArticulos.add(miArticulo) ;
            
            // Informamos de que se ha creado un nuevo artículo
            JOptionPane.showMessageDialog(null, "Se ha añadido un artículo.",
                    "Atención", JOptionPane.INFORMATION_MESSAGE);
            
            // La opción guardar la habilitamos ahora
            this.jMenuGuardar.setEnabled(true) ;
        }
        // Liberar de la memoria el formulario
        dlgAlta.dispose();
    }//GEN-LAST:event_jMenuCrearElementoActionPerformed

    private void jMenuListarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuListarActionPerformed
        // TODO add your handling code here:
        //si se pulsa listar tranajadores, creamos la ventana que controla este caso
        ListarArticulos ventanaLista = new ListarArticulos(this, true, Principal.listaArticulos) ;
        ventanaLista.pack(); //la ajustamos
        ventanaLista.setTitle("Listado de artículos"); //la titulamos
        ventanaLista.setLocationRelativeTo(null);
        ventanaLista.setVisible(true); //le transferimos el control

        ventanaLista.dispose(); //cuando lo recuperemos, la destruimos.
    }//GEN-LAST:event_jMenuListarActionPerformed

    private void jMenuSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuSalirActionPerformed
        // Si se pulsa y hemos modificado algo se lanza el mensaje
        // pidiendo la confirmación para guardarlos o descartar.
        confirmarSalida() ;   
    }//GEN-LAST:event_jMenuSalirActionPerformed

    private void jMenuGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuGuardarActionPerformed
        // Si se guardan los datos en el fichero avisamos
        if (SalvarRecuperar.guardarArrayEnFichero(Principal.listaArticulos)) {
            // Avisamos del éxito
            JOptionPane.showMessageDialog(null, "El fichero con los datos de"
                    + " los artículos fue guardado con éxito.",
                    "Atención",
                    JOptionPane.INFORMATION_MESSAGE);
            // La opción guardar la deshabilitamos ahora
            this.jMenuGuardar.setEnabled(false) ;
        }
    }//GEN-LAST:event_jMenuGuardarActionPerformed
    
    private void jMenuModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuModificarActionPerformed
        // Abrir la ventana de búsqueda para pedir el código del artículo
        DlgBuscarArticulo ventanaBuscar = new DlgBuscarArticulo(this, true) ;
        ventanaBuscar.pack(); 
        ventanaBuscar.setLocationRelativeTo(null);
        // Transferimos el control
        ventanaBuscar.setVisible(true); 
        
        // A la vuelta del cuadro de buscar, comprobamos si se introdujo un
        // código.
        String elCodigo = ventanaBuscar.getCodigo() ;
        if (elCodigo != null)
            gestionarModificacion(Integer.parseInt(elCodigo)) ;
    }//GEN-LAST:event_jMenuModificarActionPerformed
   
    private void jMenuBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuBorrarActionPerformed
        
        int posicion = -1 ;
        
        // Abrir la ventana de búsqueda para pedir el código del artículo
        DlgBuscarArticulo ventanaBuscar = new DlgBuscarArticulo(this, true) ;
        ventanaBuscar.pack(); 
        ventanaBuscar.setLocationRelativeTo(null);
        // Transferimos el control
        ventanaBuscar.setVisible(true); 
        
        // A la vuelta del cuadro de buscar, comprobamos si se introdujo un
        // código.
        String elCodigo = ventanaBuscar.getCodigo() ;
        
        if (elCodigo != null) {
            // Buscar la posición del elemento en el ArrayList        
            posicion = SalvarRecuperar.getPosicionEnLista(Principal.getListaArticulos(), Integer.parseInt(elCodigo)) ;
            
            // Se busca en el ArrayList el elemento y si no se encuentra se informa
            if (posicion == -1)
                JOptionPane.showMessageDialog(null, 
                        "No existe un artículo con ese código", "Atención",
                        JOptionPane.ERROR_MESSAGE); 
        
            else {
                // Se pide confirmación de borradp
                if (JOptionPane.showConfirmDialog(null, "¿Está seguro de que quiere eliminar el artículo: \n" +
                        Principal.getListaArticulos().get(posicion).toString(), "Borrar artículo",
                        JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
                        
                    // Eliminarlo de la lista
                    Principal.getListaArticulos().remove(posicion) ;
                    
                    // La opción está habilitada ahora
                    jMenuGuardar.setEnabled(true);
                    
                    // Informamos de que se ha borrado
                    JOptionPane.showMessageDialog(null, "Se ha borrado el artículo",
                            "Atención",
                            JOptionPane.INFORMATION_MESSAGE);
                }
            }
        }
    }//GEN-LAST:event_jMenuBorrarActionPerformed

    private void jMenuAcercadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuAcercadeActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(null, "Tarea del módulo de programación DAW.\n"
                + " Carlos Villatoro.\n"
                + " programa de prueba ", 
                    "Acerca de...", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jMenuAcercadeActionPerformed
        
    
    /**
     * Busca en el ArrayList un trabajador con el nif pasado como parámetro.
     * Si lo encuentra, abre la ventana de mostrar/editar trabajador.
     * @param nifSeleccionado 
     */
    private void gestionarModificacion(int codigo) {
        // Buscar la posición del elemento en el ArrayList        
        int posicion = SalvarRecuperar.getPosicionEnLista(Principal.getListaArticulos(), codigo) ;
            
        if (posicion == -1)
            JOptionPane.showMessageDialog(null, "No existe un artículo con ese código",
                 "Atención", JOptionPane.ERROR_MESSAGE); 
        else {
            // Declarar la ventana que vamos a abrir      
            EditaArticulo dlgModificar ;
            // Construcción de ventana secundaria. Pasamos la posicion 
            dlgModificar = new EditaArticulo(this, true, Principal.getListaArticulos(),
                    posicion);        
            // El método pack() hace que la ventana coja el tamaño más pequeño
            // posible que permita ver todos los componentes
            dlgModificar.pack() ;
            dlgModificar.setModalityType(DEFAULT_MODALITY_TYPE) ;                                       
            // Tamaño de la ventana
            dlgModificar.setSize(ANCHURA_VENTANA, ALTURA_VENTANA) ;
            // Centrar la ventana
            dlgModificar.setLocationRelativeTo(null) ;
            // Hacemos visible el formulario
            dlgModificar.setVisible(true);

            // A la vuelta del formulario y antes de eliminarlo de memoria, 
            // obtenemos el objeto modificado
            Articulo miArticulo = dlgModificar.getArticulo() ;
            if (miArticulo != null) {
                // Informamos de que se ha modificado el artículo
                JOptionPane.showMessageDialog(null, 
                            "Se ha modificado el artículo.", "Atención",
                            JOptionPane.INFORMATION_MESSAGE);

                // La opción guardar la habilitamos ahora
                this.jMenuGuardar.setEnabled(true) ;
            }
            // Liberar de la memoria el formulario
            dlgModificar.dispose();
        }
    }
       
      
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                Principal ventana ;
                ventana = new Principal() ;
                // Centrar la ventana
                ventana.setSize(ANCHURA_VENTANA, ALTURA_VENTANA);
                ventana.setLocationRelativeTo(null);
        
                // Cargar imagen de fondo para el JFrame
                try {
                    ventana.setContentPane(new JLabel(new ImageIcon(ImageIO.read(new File("src/recursos/star-wars.jpg")))));
                } catch (IOException e) {
                    System.err.println("Imagen star-wars.jpg no encontrada");
                }
                
                
                // Establecer el icono de la aplicación
                try {
                    ventana.setIconImage(new ImageIcon("src/recursos/starwars.png").getImage()) ; 
                } catch (Exception e) {
                    System.err.println("Icono starwars.png no encontrado");
                }
                
                // Hacer visible la ventana                
                ventana.setVisible(true);
                
                // Cargar los trabajadores que existan en el fichero
                Principal.setListaArticulos(SalvarRecuperar.cargarLista()) ;
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem jMenuAcercade;
    private javax.swing.JMenu jMenuArchivo;
    private javax.swing.JMenu jMenuArticulos;
    private javax.swing.JMenu jMenuAyuda;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuBorrar;
    private javax.swing.JMenuItem jMenuCrearElemento;
    private javax.swing.JMenuItem jMenuGuardar;
    private javax.swing.JMenuItem jMenuListar;
    private javax.swing.JMenuItem jMenuModificar;
    private javax.swing.JMenuItem jMenuSalir;
    // End of variables declaration//GEN-END:variables
}